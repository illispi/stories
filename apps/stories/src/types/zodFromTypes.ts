// Generated by ts-to-zod
import { z } from "zod";
import {
  personalQuestionsSchemaCustom,
  theirQuestionsSchemaCustom,
} from "~/server/questionsSchemas";

export const accountSchema = z.object({
  //id: z.string(),
  type: z.string(),
  provider: z.string(),
  providerAccountId: z.string(),
  refresh_token: z.string().nullable(),
  access_token: z.string().nullable(),
  expires_at: z.string().nullable(),
  token_type: z.string().nullable(),
  scope: z.string().nullable(),
  id_token: z.string().nullable(),
  session_state: z.string().nullable(),
  userId: z.string().nullable(),
});

export const personalQuestionsSchema = personalQuestionsSchemaCustom;

export const sessionSchema = z.object({
  id: z.string(),
  sessionToken: z.string(),
  expires: z.date(),
  userId: z.string().nullable(),
});

export const theirQuestionsSchema = theirQuestionsSchemaCustom;

export const userSchema = z.object({
  id: z.string(),
  name: z.string().nullable(),
  email: z.string().nullable(),
  emailVerified: z.date().nullable(),
  image: z.string().nullable(),
});

export const verificationTokenSchema = z.object({
  identifier: z.string().nullable(),
  token: z.string().nullable(),
  expires: z.date().nullable(),
});

export const dbSchema = z.object({
  account: accountSchema,
  personal_questions: personalQuestionsSchema,
  session: sessionSchema,
  their_questions: theirQuestionsSchema,
  user: userSchema,
  VerificationToken: verificationTokenSchema,
});

export type PersonalQuestions = z.infer<typeof personalQuestionsSchema>;
export type TheirQuestions = z.infer<typeof theirQuestionsSchema>;
