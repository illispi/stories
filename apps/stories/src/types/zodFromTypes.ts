// Generated by ts-to-zod
import { z } from "zod";
import { personalQuestionsSchemaCustom } from "~/server/questionsSchemas";

export const accountSchema = z.object({
  //id: z.string(),
  type: z.string(),
  provider: z.string(),
  providerAccountId: z.string(),
  refresh_token: z.string().nullable(),
  access_token: z.string().nullable(),
  expires_at: z.string().nullable(),
  token_type: z.string().nullable(),
  scope: z.string().nullable(),
  id_token: z.string().nullable(),
  session_state: z.string().nullable(),
  userId: z.string().nullable(),
});

export const personalQuestionsSchema = personalQuestionsSchemaCustom;

export const sessionSchema = z.object({
  id: z.string(),
  sessionToken: z.string(),
  expires: z.date(),
  userId: z.string().nullable(),
});

export const theirQuestionsSchema = z.object({
  id: z.number(),
  user_id: z.string(),
  relation: z.string(),
  gender: z.string(),
  age_of_onset: z.number(),
  treatment: z.string().nullable(),
  symptoms_before_onset: z.string().nullable(),
  symptoms_during_psychosis: z.string().nullable(),
  med_efficacy: z.boolean().nullable(),
  side_effects: z.string().nullable(),
  quitting: z.boolean().nullable(),
  smoking: z.boolean().nullable(),
  negative_symptoms: z.string().nullable(),
  personality_before: z.string(),
  personality_changed: z.boolean(),
  personality_after: z.string().nullable(),
  life_unemployed: z.boolean().nullable(),
  life_disability: z.boolean().nullable(),
  life_employed: z.boolean().nullable(),
  life_student: z.boolean().nullable(),
  partner: z.boolean().nullable(),
  friends: z.boolean().nullable(),
  children: z.boolean().nullable(),
  goals_changed: z.boolean(),
  goals_after: z.string().nullable(),
});

export const userSchema = z.object({
  id: z.string(),
  name: z.string().nullable(),
  email: z.string().nullable(),
  emailVerified: z.date().nullable(),
  image: z.string().nullable(),
});

export const verificationTokenSchema = z.object({
  identifier: z.string().nullable(),
  token: z.string().nullable(),
  expires: z.date().nullable(),
});

export const dbSchema = z.object({
  account: accountSchema,
  personal_questions: personalQuestionsSchema,
  session: sessionSchema,
  their_questions: theirQuestionsSchema,
  user: userSchema,
  VerificationToken: verificationTokenSchema,
});

export type PersonalQuestions = z.infer<typeof personalQuestionsSchema>;
